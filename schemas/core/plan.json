{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "id": "https://api.maas.global/core/plan",
  "description": "OpenTripPlanner compatible format for plans, extended with id for legs and itineraries",
  "properties": {
    "from": {
      "$ref": "#/definitions/place"
    },
    "planId": {
      "$ref": "./units.json#/definitions/uuid"
    },
    "itineraries": {
      "$ref": "#/definitions/itineraries"
    }
  },
  "definitions": {
    "itineraries": {
      "type": "array",
      "minItems": 0,
      "items": {
        "$ref": "#/definitions/itinerary"
      }
    },
    "itinerary": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "./units.json#/definitions/uuid"
        },
        "sourcePlanId": {
          "$ref": "./units.json#/definitions/uuid"
        },
        "identityId": {
          "$ref": "./aws-units.json#/definitions/identityId"
        },
        "signature": {
          "$ref": "#/definitions/signature"
        },
        "state": {
          "$ref": "./state.json#/definitions/itineraryState"
        },
        "startTime": {
          "$ref": "./units.json#/definitions/time"
        },
        "endTime": {
          "$ref": "./units.json#/definitions/time"
        },
        "fare": {
          "$ref": "#/definitions/fare"
        },
        "legs": {
          "type": "array",
          "minItems": 0,
          "items": [
            {
              "$ref": "#/definitions/leg"
            }
          ]
        },
        "productOptions": {
          "type": "array",
          "minItems": 0,
          "items": {
            "$ref": "./productOption.json"
          }
        }
      },
      "required": [
        "startTime",
        "endTime",
        "legs",
        "sourcePlanId"
      ]
    },
    "leg": {
      "allOf": [
        {
          "$ref": "#/definitions/legExtensions"
        },
        {
          "anyOf": [
            {
              "$ref": "#/definitions/legCore"
            },
            {
              "$ref": "#/definitions/waitingLeg"
            },
            {
              "$ref": "#/definitions/transferLeg"
            }
          ]
        }
      ]
    },
    "legExtensions": {
      "type": "object",
      "description": "MaaS specific leg extensions",
      "properties": {
        "id": {
          "$ref": "./units.json#/definitions/uuid"
        },
        "signature": {
          "$ref": "#/definitions/signature"
        },
        "tspProduct": {
          "$ref": "../tsp/booking-option.json#/definitions/tspProduct"
        },
        "productOption": {
          "type": "integer",
          "minValue": 0
        }
      }
    },
    "legCore": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "./state.json#/definitions/legState"
        },
        "from": {
          "$ref": "#/definitions/place"
        },
        "to": {
          "$ref": "#/definitions/place"
        },
        "startTime": {
          "$ref": "./units.json#/definitions/time"
        },
        "endTime": {
          "$ref": "./units.json#/definitions/time"
        },
        "mode": {
          "anyOf": [
            {
              "$ref": "./mode.json#/definitions/personalMode"
            },
            {
              "$ref": "./mode.json#/definitions/publicTransitMode"
            },
            {
              "$ref": "./mode.json#/definitions/privateTransitMode"
            }
          ]
        },
        "departureDelay": {
          "$ref": "./units.json#/definitions/duration"
        },
        "arrivalDelay": {
          "$ref": "./units.json#/definitions/duration"
        },
        "distance": {
          "$ref": "./units.json#/definitions/distance"
        },
        "route": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        "routeShortName": {
          "type": "string",
          "minLength": 1,
          "maxLength": 64
        },
        "routeLongName": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        "agencyId": {
          "$ref": "#/definitions/agencyId"
        },
        "legGeometry": {
          "$ref": "#/definitions/legGeometry"
        },
        "fare": {
          "$ref": "../core/units.json#/definitions/fare"
        }
      },
      "required": [
        "from",
        "to",
        "mode",
        "startTime",
        "endTime",
        "legGeometry"
      ],
      "additionalProperties": true
    },
    "waitingLeg": {
      "type": "object",
      "additionalProperties": true,
      "properties": {
        "startTime": {
          "$ref": "./units.json#/definitions/time"
        },
        "endTime": {
          "$ref": "./units.json#/definitions/time"
        },
        "mode": {
          "$ref": "./mode.json#/definitions/waitingMode"
        }
      },
      "required": [
        "mode",
        "startTime",
        "endTime"
      ]
    },
    "transferLeg": {
      "type": "object",
      "additionalProperties": true,
      "properties": {
        "startTime": {
          "$ref": "./units.json#/definitions/time"
        },
        "endTime": {
          "$ref": "./units.json#/definitions/time"
        },
        "mode": {
          "$ref": "./mode.json#/definitions/transferMode"
        }
      },
      "required": [
        "mode",
        "startTime",
        "endTime"
      ]
    },
    "agencyId": {
      "type": "string",
      "minLength": 2,
      "maxLength": 64
    },
    "place": {
      "type": "object",
      "additionalProperties": true,
      "allOf": [
        {
          "$ref": "./units.json#/definitions/place"
        },
        {
          "type": "object",
          "properties": {
            "stopId": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64
            },
            "stopCode": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64
            }
          }
        }
      ],
      "required": [
        "lat",
        "lon"
      ]
    },
    "legGeometry": {
      "$ref": "./units.json#/definitions/polyline"
    },
    "co2": {
      "type": "integer"
    },
    "fare": {
      "$ref": "./units.json#/definitions/fare"
    },
    "signature": {
      "type": "string",
      "minLength": 1,
      "maxLength": 1024
    }
  }
}
