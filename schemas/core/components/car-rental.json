{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "description": "Base schema for MODE_CAR* metas",
  "type": "object",
  "properties": {
    "id": {
      "type": "string",
      "minLength": 1,
      "maxLength": 256
    },
    "name": {
      "type": "string",
      "minLength": 1,
      "maxLength": 256
    },
    "description": {
      "type": "string",
      "minLength": 1,
      "maxLength": 256
    },
    "image": {
      "$ref": "../components/units.json#/definitions/url"
    },
    "terms": {},
    "car": {
      "type": "object",
      "properties": {
        "passengers": {
          "description": "The number of passengers this vehicle will be able to transport",
          "type": "integer",
          "minimum": 0,
          "maximum": 200
        },
        "doors": {
          "description": "The number of doors this car model may have - an array of min & max",
          "type": "array",
          "items": {
            "type": "integer",
            "minimum": 0,
            "maximum": 10
          },
          "minItems": 2,
          "maxItems": 2
        },
        "luggage": {
          "description": "The number of luggage this vehicle will be able to transport - an array of [big, small] luggage",
          "type": "array",
          "items": {
            "type": "integer",
            "minimum": 0,
            "maximum": 200
          },
          "minItems": 2,
          "maxItems": 2
        },
        "transmission": {
          "enum": ["manual", "automatic", null]
        },
        "fuel": {
          "enum": ["diesel", "electric", "ethanol", "gasoline", "hybrid", "hydrogen", "lpg", "multifuel", null]
        },
        "classification": {
          "$ref": "../components/ACRISS.json"
        },
        "registrationPlate": {
          "description": "Registration plate (e.g. if we know the actual car already)",
          "type": "string",
          "pattern": "[A-Z\\-0-9]"
        },
        "damage": {
          "description": "Any reported damages to the car (if available)",
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        "fuelLevel": {
          "description": "The percentage of fuel the car has at the moment",
          "type": "number",
          "minLength": 0,
          "maxLength": 100
        }
      },
      "required": ["classification"]
    },
    "pickupReturnInfo": {
      "description": "Pickup & return Instructions in HTML format",
      "$ref": "../components/units.json#/definitions/htmlBlock"
    },
    "startEndGeoRegionUrl": {
      "description": "Region in which car can be rented and returned. Url to GeoJSON file",
      "$ref": "../components/units.json#/definitions/url"
    }
  },
  "required": ["name", "description", "image"],
  "additionalProperties": false
}
