{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "id": "https://api.maas.global/core/itinerary",
  "description": "Product option for an itinerary, is either an existing booking pointer or a new booking instruction",
  "type": "object",
  "properties": {
    "identityId": {
      "type": "string",
      "pattern": "^[aepsu]{2}\\-[0-9A-Z_a-z]{4}\\-[0-9]:[0-9a-f]{8}(\\-[0-9a-f]{4}){3}\\-[0-9a-f]{12}$"
    },
    "bookingId": {
      "description": "Universally unique identifier, see https://en.wikipedia.org/wiki/Universally_unique_identifier",
      "type": "string",
      "pattern": "^[0-9A-Fa-f]{8}(\\-[0-9A-Fa-f]{4}){3}\\-[0-9A-Fa-f]{12}$"
    },
    "ref": {
      "type": "integer",
      "minValue": 0
    },
    "product": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "description": "Product in core which encapsulates at least an id, name and a tspProductId",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        "name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        "description": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        "icon": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        "priority": {
          "type": "integer",
          "minimum": 0
        },
        "agencyId": {
          "type": "string",
          "minLength": 2,
          "maxLength": 64
        },
        "tspProductId": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        }
      },
      "required": [
        "id",
        "tspProductId",
        "name"
      ]
    },
    "fare": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "description": "A fare/price as billed to the user in WMPs or in tokens",
      "type": "object",
      "properties": {
        "amount": {
          "anyOf": [
            {
              "type": "integer",
              "minimum": 0
            },
            {
              "type": "null"
            }
          ]
        },
        "currency": {
          "type": "string",
          "enum": [
            "WMP",
            "TOKEN"
          ]
        },
        "tokenId": {
          "type": "string"
        }
      },
      "required": [
        "amount",
        "currency"
      ],
      "additionalProperties": false
    },
    "fares": {
      "type": "array",
      "items": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "description": "A fare/price as billed to the user in WMPs or in tokens",
        "type": "object",
        "properties": {
          "amount": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0
              },
              {
                "type": "null"
              }
            ]
          },
          "currency": {
            "type": "string",
            "enum": [
              "WMP",
              "TOKEN"
            ]
          },
          "tokenId": {
            "type": "string"
          }
        },
        "required": [
          "amount",
          "currency"
        ],
        "additionalProperties": false
      }
    },
    "terms": {
      "description": "MaaS booking terms and condition for its business engine",
      "type": "object",
      "properties": {
        "type": {
          "description": "A type of ticket/product that this booking is valid for - should be unique within a given region, e.g. 'Single ticket / LÃ¤hiseutu 2'. When reusing the tickets in maas-backend, the 'type' field is checked for equality.",
          "type": "string",
          "minLength": 0,
          "maxLength": 64
        },
        "validity": {
          "description": "Booking validity conditions",
          "type": "object",
          "properties": {
            "startTime": {
              "description": "POSIX time in milliseconds, https://en.wikipedia.org/wiki/Unix_time",
              "type": "integer",
              "maximum": 9007199254740991,
              "minimum": 1451606400
            },
            "endTime": {
              "description": "POSIX time in milliseconds, https://en.wikipedia.org/wiki/Unix_time",
              "type": "integer",
              "maximum": 9007199254740991,
              "minimum": 1451606400
            }
          },
          "required": [
            "startTime",
            "endTime"
          ]
        },
        "fareRate": {
          "description": "Booking fare rate",
          "type": "object",
          "properties": {
            "amount": {
              "type": "number",
              "minimum": 0,
              "multipleOf": 0.01
            },
            "currency": {
              "description": "Accepted monetary unit in ISO 4127 format, see https://en.wikipedia.org/wiki/ISO_4217#cite_note-1",
              "type": "string",
              "enum": [
                "EUR",
                "GBP"
              ]
            },
            "timeUnit": {
              "type": "string",
              "enum": [
                "1min",
                "15min",
                "30min",
                "1hr",
                "total"
              ]
            }
          },
          "required": [
            "amount",
            "currency",
            "timeUnit"
          ]
        }
      },
      "additionalProperties": true
    },
    "meta": {
      "type": "object",
      "description": "TSP/mode-specific additional information. The TSP adapter should set MODE_{mode} with defined data, otherwise 'meta' can be used freely.",
      "properties": {
        "MODE_WALK": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "description": "Schema for MODE_WALK meta field",
          "type": "object"
        },
        "MODE_BICYCLE": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object",
          "properties": {
            "pickupStation": {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "description": "MaaS bike station schema",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "location": {
                  "description": "Geographic latitude-longitude object in WGS-84 system, see https://en.wikipedia.org/wiki/World_Geodetic_System",
                  "type": "object",
                  "properties": {
                    "lat": {
                      "description": "Geographic latitude (north-south axis) in WGS-84 system, see https://en.wikipedia.org/wiki/World_Geodetic_System",
                      "type": "number",
                      "minimum": -90,
                      "maximum": 90
                    },
                    "lon": {
                      "description": "Geographic longitude (east-west axis) in WGS-84 system, see https://en.wikipedia.org/wiki/World_Geodetic_System",
                      "type": "number",
                      "minimum": -180,
                      "maximum": 180
                    }
                  },
                  "required": [
                    "lat",
                    "lon"
                  ]
                },
                "slots": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "number",
                      "minimum": 0
                    },
                    "empty": {
                      "type": "number",
                      "minimum": 0
                    },
                    "bikes": {
                      "type": "number",
                      "minimum": 0
                    }
                  },
                  "required": [
                    "total",
                    "empty",
                    "bikes"
                  ]
                }
              },
              "required": [
                "id",
                "name",
                "location"
              ]
            },
            "returnStation": {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "description": "MaaS bike station schema",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "location": {
                  "description": "Geographic latitude-longitude object in WGS-84 system, see https://en.wikipedia.org/wiki/World_Geodetic_System",
                  "type": "object",
                  "properties": {
                    "lat": {
                      "description": "Geographic latitude (north-south axis) in WGS-84 system, see https://en.wikipedia.org/wiki/World_Geodetic_System",
                      "type": "number",
                      "minimum": -90,
                      "maximum": 90
                    },
                    "lon": {
                      "description": "Geographic longitude (east-west axis) in WGS-84 system, see https://en.wikipedia.org/wiki/World_Geodetic_System",
                      "type": "number",
                      "minimum": -180,
                      "maximum": 180
                    }
                  },
                  "required": [
                    "lat",
                    "lon"
                  ]
                },
                "slots": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "number",
                      "minimum": 0
                    },
                    "empty": {
                      "type": "number",
                      "minimum": 0
                    },
                    "bikes": {
                      "type": "number",
                      "minimum": 0
                    }
                  },
                  "required": [
                    "total",
                    "empty",
                    "bikes"
                  ]
                }
              },
              "required": [
                "id",
                "name",
                "location"
              ]
            },
            "pickupStationId": {
              "type": "string"
            },
            "returnStationId": {
              "type": "string"
            },
            "bike": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              },
              "required": [
                "id"
              ]
            }
          }
        },
        "MODE_CAR": {
          "description": "Schemas for MODE_CAR meta field",
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "minLength": 1,
              "maxLength": 256
            },
            "name": {
              "type": "string",
              "minLength": 1,
              "maxLength": 256
            },
            "description": {
              "type": "string",
              "minLength": 1,
              "maxLength": 256
            },
            "image": {
              "description": "Uniform resource locator, see https://en.wikipedia.org/wiki/Uniform_Resource_Locator and https://mathiasbynens.be/demo/url-regex",
              "type": "string",
              "pattern": "^(https?|ftp):\\/\\/(?:[\\0-\\x08\\x0E-\\x1F!\"%-\\-0->@-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])(?:[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*$"
            },
            "terms": {},
            "car": {
              "type": "object",
              "properties": {
                "passengers": {
                  "description": "The number of passengers this vehicle will be able to transport",
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 200
                },
                "doors": {
                  "description": "The number of doors this car model may have - an array of min & max",
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 10
                  },
                  "minItems": 2,
                  "maxItems": 2
                },
                "luggage": {
                  "description": "The number of luggage this vehicle will be able to transport - an array of [big, small] luggage",
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 200
                  },
                  "minItems": 2,
                  "maxItems": 2
                },
                "transmission": {
                  "enum": [
                    "manual",
                    "automatic",
                    null
                  ]
                },
                "fuel": {
                  "enum": [
                    "diesel",
                    "electric",
                    "ethanol",
                    "gasoline",
                    "hybrid",
                    "hydrogen",
                    "lpg",
                    "multifuel",
                    null
                  ]
                },
                "classification": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "description": "ACRISS classification of the car, see https://en.wikipedia.org/wiki/ACRISS_Car_Classification_Code",
                  "type": "string",
                  "pattern": "[C-JL-PRSUWX][B-HJ-NP-TV-Z][A-DMN][A-FHIL-NQ-SUVXZ]"
                },
                "registrationPlate": {
                  "description": "Registration plate (e.g. if we know the actual car already)",
                  "type": "string",
                  "pattern": "[\\-0-9A-Z]"
                },
                "damage": {
                  "description": "Any reported damages to the car (if available)",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 255
                },
                "fuelLevel": {
                  "description": "The percentage of fuel the car has at the moment",
                  "type": "number",
                  "minLength": 0,
                  "maxLength": 100
                }
              },
              "required": [
                "classification"
              ]
            },
            "pickupReturnInfo": {
              "description": "Pickup & return Instructions in HTML format",
              "type": "string",
              "pattern": "^[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]*<(?:address|arcticle|aside|blockquote|div|dl|figcaption|figure|h1|h2|h3|h4|h5|h6|header|hgroup|main|nav|ol|output|p|pre|section|table|ul|video)>(?:[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*>[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]*$"
            },
            "startEndGeoRegionUrl": {
              "description": "Region in which car can be rented and returned. Url to GeoJSON file",
              "type": "string",
              "pattern": "^(https?|ftp):\\/\\/(?:[\\0-\\x08\\x0E-\\x1F!\"%-\\-0->@-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])(?:[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*$"
            }
          },
          "required": [
            "name",
            "description",
            "image"
          ],
          "additionalProperties": false
        },
        "MODE_TRAM": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "description": "Schema for MODE_TRAM meta field",
          "type": "object"
        },
        "MODE_SUBWAY": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "description": "Schema for MODE_SUBWAY meta field",
          "type": "object"
        },
        "MODE_RAIL": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "description": "Schema for MODE_RAIL meta field",
          "type": "object"
        },
        "MODE_BUS": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "description": "Schema for MODE_BUS meta field",
          "type": "object"
        },
        "MODE_FERRY": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "description": "Schema for MODE_FERRY meta field",
          "type": "object"
        },
        "MODE_CABLE_CAR": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "description": "Schema for MODE_CABLE_CAR meta field",
          "type": "object"
        },
        "MODE_GONDOLA": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "description": "Schema for MODE_GONDOLA meta field",
          "type": "object"
        },
        "MODE_FURNICULAR": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "description": "Schema for MODE_FUNICULAR meta field",
          "type": "object"
        },
        "MODE_SHARED_CAR": {
          "description": "Schemas for MODE_SHARED_CAR meta field",
          "$schema": "http://json-schema.org/draft-04/schema#",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "minLength": 1,
              "maxLength": 256
            },
            "name": {
              "type": "string",
              "minLength": 1,
              "maxLength": 256
            },
            "description": {
              "type": "string",
              "minLength": 1,
              "maxLength": 256
            },
            "image": {
              "description": "Uniform resource locator, see https://en.wikipedia.org/wiki/Uniform_Resource_Locator and https://mathiasbynens.be/demo/url-regex",
              "type": "string",
              "pattern": "^(https?|ftp):\\/\\/(?:[\\0-\\x08\\x0E-\\x1F!\"%-\\-0->@-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])(?:[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*$"
            },
            "terms": {},
            "car": {
              "type": "object",
              "properties": {
                "passengers": {
                  "description": "The number of passengers this vehicle will be able to transport",
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 200
                },
                "doors": {
                  "description": "The number of doors this car model may have - an array of min & max",
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 10
                  },
                  "minItems": 2,
                  "maxItems": 2
                },
                "luggage": {
                  "description": "The number of luggage this vehicle will be able to transport - an array of [big, small] luggage",
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 200
                  },
                  "minItems": 2,
                  "maxItems": 2
                },
                "transmission": {
                  "enum": [
                    "manual",
                    "automatic",
                    null
                  ]
                },
                "fuel": {
                  "enum": [
                    "diesel",
                    "electric",
                    "ethanol",
                    "gasoline",
                    "hybrid",
                    "hydrogen",
                    "lpg",
                    "multifuel",
                    null
                  ]
                },
                "classification": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "description": "ACRISS classification of the car, see https://en.wikipedia.org/wiki/ACRISS_Car_Classification_Code",
                  "type": "string",
                  "pattern": "[C-JL-PRSUWX][B-HJ-NP-TV-Z][A-DMN][A-FHIL-NQ-SUVXZ]"
                },
                "registrationPlate": {
                  "description": "Registration plate (e.g. if we know the actual car already)",
                  "type": "string",
                  "pattern": "[\\-0-9A-Z]"
                },
                "damage": {
                  "description": "Any reported damages to the car (if available)",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 255
                },
                "fuelLevel": {
                  "description": "The percentage of fuel the car has at the moment",
                  "type": "number",
                  "minLength": 0,
                  "maxLength": 100
                }
              },
              "required": [
                "classification"
              ]
            },
            "pickupReturnInfo": {
              "description": "Pickup & return Instructions in HTML format",
              "type": "string",
              "pattern": "^[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]*<(?:address|arcticle|aside|blockquote|div|dl|figcaption|figure|h1|h2|h3|h4|h5|h6|header|hgroup|main|nav|ol|output|p|pre|section|table|ul|video)>(?:[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*>[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]*$"
            },
            "startEndGeoRegionUrl": {
              "description": "Region in which car can be rented and returned. Url to GeoJSON file",
              "type": "string",
              "pattern": "^(https?|ftp):\\/\\/(?:[\\0-\\x08\\x0E-\\x1F!\"%-\\-0->@-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])(?:[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*$"
            }
          },
          "required": [
            "name",
            "description",
            "image"
          ],
          "additionalProperties": false
        },
        "MODE_TRANSIT": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "description": "Schema for MODE_TRANSIT meta field",
          "type": "object"
        },
        "MODE_TRAIN": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "description": "Schema for MODE_TRAIN meta field",
          "type": "object"
        },
        "MODE_TRAINISH": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "description": "Schema for MODE_TRAINISH meta field",
          "type": "object"
        },
        "MODE_BUSISH": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "description": "Schema for MODE_BUSISH meta field",
          "type": "object"
        },
        "MODE_TAXI": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "description": "Schema for MODE_TAXI meta field",
          "type": "object",
          "properties": {
            "vehicleId": {
              "description": "The taxi id (in the taxi number plate on top of the vehicle)",
              "type": "string",
              "minLength": 1,
              "maxLength": 256
            },
            "vehicleLocation": {
              "description": "Geographic latitude-longitude object in WGS-84 system, see https://en.wikipedia.org/wiki/World_Geodetic_System",
              "type": "object",
              "properties": {
                "lat": {
                  "description": "Geographic latitude (north-south axis) in WGS-84 system, see https://en.wikipedia.org/wiki/World_Geodetic_System",
                  "type": "number",
                  "minimum": -90,
                  "maximum": 90
                },
                "lon": {
                  "description": "Geographic longitude (east-west axis) in WGS-84 system, see https://en.wikipedia.org/wiki/World_Geodetic_System",
                  "type": "number",
                  "minimum": -180,
                  "maximum": 180
                }
              },
              "required": [
                "lat",
                "lon"
              ]
            },
            "vehicleType": {
              "type": "string",
              "minLength": 1,
              "maxLength": 256
            },
            "vehicleDescription": {
              "description": "An arbitrary description of the vehicle, e.g. 'Black Jaguar'",
              "type": "string",
              "minLength": 1,
              "maxLength": 256
            },
            "driver": {
              "description": "Driver information",
              "type": "object",
              "properties": {
                "phone": {
                  "type": "string"
                },
                "name": {
                  "description": "Driver name, e.g. 'Sergey' or 'Jane S.'",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 128
                },
                "image": {
                  "description": "Uniform resource locator, see https://en.wikipedia.org/wiki/Uniform_Resource_Locator and https://mathiasbynens.be/demo/url-regex",
                  "type": "string",
                  "pattern": "^(https?|ftp):\\/\\/(?:[\\0-\\x08\\x0E-\\x1F!\"%-\\-0->@-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])(?:[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*$"
                }
              }
            },
            "dispatchOrderId": {
              "type": "string",
              "minLength": 1,
              "maxLength": 128
            },
            "eta": {
              "description": "POSIX time in milliseconds, https://en.wikipedia.org/wiki/Unix_time",
              "type": "integer",
              "maximum": 9007199254740991,
              "minimum": 1451606400
            },
            "taxiCenter": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 64
                },
                "phone": {
                  "description": "ITU-T E.164 phone number, see https://www.safaribooksonline.com/library/view/regular-expressions-cookbook/9781449327453/ch04s03.html",
                  "type": "string",
                  "pattern": "^\\+(?:[0-9]){6,14}[0-9]$"
                }
              }
            }
          },
          "additionalProperties": false
        }
      }
    }
  },
  "required": [
    "identityId",
    "ref",
    "product",
    "terms",
    "meta"
  ],
  "additionalProperties": false
}