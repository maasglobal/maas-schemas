/*

undefined
Schema for MODE_TAXI meta field

!!! AUTO GENERATED BY IOTSFJS REFRAIN FROM MANUAL EDITING !!!
See https://www.npmjs.com/package/io-ts-from-json-schema

*/

import { NonEmptyArray } from 'fp-ts/lib/NonEmptyArray';
import * as t from 'io-ts';
import { nonEmptyArray } from 'io-ts-types/lib/nonEmptyArray';

import * as Common_ffba_ from '../components/common';
import * as CostBreakDown_f5f6_ from '../components/costBreakDown';
import * as Place_de2d_ from '../components/place';
import * as SpaceDemand_101a_ from '../components/spaceDemand';
import * as Units_c404_ from '../components/units';
import * as UnitsGeo_3e31_ from '../components/units-geo';
import * as Vehicle_52ac_ from '../components/vehicle';

export const schemaId = 'https://schemas.maas.global/core/modes/MODE_TAXI.json';

// MODE_TAXI
// The default export. More information at the top.
export type MODE_TAXI = t.Branded<
  {
    vehicleId?: string & Vehicle_52ac_.VehicleId;
    durationTimeSpan?: string;
    noShowReportedByDriver?: boolean;
    vehicleLocation?: UnitsGeo_3e31_.Location;
    vehicleType?: string;
    vehicleDescription?: string;
    driver?: {
      phone?: string;
      name?: string;
      image?: Units_c404_.Url;
      rating?: number;
    } & Record<string, unknown>;
    pickupIdentificationCode?: string;
    dispatchOrderId?: string;
    eta?: Units_c404_.Time;
    pickupAt?: Units_c404_.Time;
    taxiCenter?: {
      image?: Units_c404_.Url;
      name?: string;
      phone?: Common_ffba_.LoosePhone;
      supportUrl?: Units_c404_.Url;
    } & Record<string, unknown>;
    messageToDriver?: string;
    spaceDemand?: SpaceDemand_101a_.SpaceDemandObject;
    pickupAddress?: Place_de2d_.Place;
    dropoffAddress?: Place_de2d_.Place;
    costBreakDown?: CostBreakDown_f5f6_.CostBreakDownArray;
  },
  MODE_TAXIBrand
>;
export type MODE_TAXIC = t.BrandC<
  t.PartialC<{
    vehicleId: t.IntersectionC<[t.StringC, typeof Vehicle_52ac_.VehicleId]>;
    durationTimeSpan: t.StringC;
    noShowReportedByDriver: t.BooleanC;
    vehicleLocation: typeof UnitsGeo_3e31_.Location;
    vehicleType: t.StringC;
    vehicleDescription: t.StringC;
    driver: t.IntersectionC<
      [
        t.PartialC<{
          phone: t.StringC;
          name: t.StringC;
          image: typeof Units_c404_.Url;
          rating: t.NumberC;
        }>,
        t.RecordC<t.StringC, t.UnknownC>,
      ]
    >;
    pickupIdentificationCode: t.StringC;
    dispatchOrderId: t.StringC;
    eta: typeof Units_c404_.Time;
    pickupAt: typeof Units_c404_.Time;
    taxiCenter: t.IntersectionC<
      [
        t.PartialC<{
          image: typeof Units_c404_.Url;
          name: t.StringC;
          phone: typeof Common_ffba_.LoosePhone;
          supportUrl: typeof Units_c404_.Url;
        }>,
        t.RecordC<t.StringC, t.UnknownC>,
      ]
    >;
    messageToDriver: t.StringC;
    spaceDemand: typeof SpaceDemand_101a_.SpaceDemandObject;
    pickupAddress: typeof Place_de2d_.Place;
    dropoffAddress: typeof Place_de2d_.Place;
    costBreakDown: typeof CostBreakDown_f5f6_.CostBreakDownArray;
  }>,
  MODE_TAXIBrand
>;
export const MODE_TAXI: MODE_TAXIC = t.brand(
  t.partial({
    vehicleId: t.intersection([t.string, Vehicle_52ac_.VehicleId]),
    durationTimeSpan: t.string,
    noShowReportedByDriver: t.boolean,
    vehicleLocation: UnitsGeo_3e31_.Location,
    vehicleType: t.string,
    vehicleDescription: t.string,
    driver: t.intersection([
      t.partial({
        phone: t.string,
        name: t.string,
        image: Units_c404_.Url,
        rating: t.number,
      }),
      t.record(t.string, t.unknown),
    ]),
    pickupIdentificationCode: t.string,
    dispatchOrderId: t.string,
    eta: Units_c404_.Time,
    pickupAt: Units_c404_.Time,
    taxiCenter: t.intersection([
      t.partial({
        image: Units_c404_.Url,
        name: t.string,
        phone: Common_ffba_.LoosePhone,
        supportUrl: Units_c404_.Url,
      }),
      t.record(t.string, t.unknown),
    ]),
    messageToDriver: t.string,
    spaceDemand: SpaceDemand_101a_.SpaceDemandObject,
    pickupAddress: Place_de2d_.Place,
    dropoffAddress: Place_de2d_.Place,
    costBreakDown: CostBreakDown_f5f6_.CostBreakDownArray,
  }),
  (
    x,
  ): x is t.Branded<
    {
      vehicleId?: string & Vehicle_52ac_.VehicleId;
      durationTimeSpan?: string;
      noShowReportedByDriver?: boolean;
      vehicleLocation?: UnitsGeo_3e31_.Location;
      vehicleType?: string;
      vehicleDescription?: string;
      driver?: {
        phone?: string;
        name?: string;
        image?: Units_c404_.Url;
        rating?: number;
      } & Record<string, unknown>;
      pickupIdentificationCode?: string;
      dispatchOrderId?: string;
      eta?: Units_c404_.Time;
      pickupAt?: Units_c404_.Time;
      taxiCenter?: {
        image?: Units_c404_.Url;
        name?: string;
        phone?: Common_ffba_.LoosePhone;
        supportUrl?: Units_c404_.Url;
      } & Record<string, unknown>;
      messageToDriver?: string;
      spaceDemand?: SpaceDemand_101a_.SpaceDemandObject;
      pickupAddress?: Place_de2d_.Place;
      dropoffAddress?: Place_de2d_.Place;
      costBreakDown?: CostBreakDown_f5f6_.CostBreakDownArray;
    },
    MODE_TAXIBrand
  > => true,
  'MODE_TAXI',
);
export type MODE_TAXIBrand = {
  readonly MODE_TAXI: unique symbol;
};
/** require('io-ts-validator').validator(nonEmptyArray(MODE_TAXI)).decodeSync(examplesMODE_TAXI) // => examplesMODE_TAXI */
export const examplesMODE_TAXI: NonEmptyArray<MODE_TAXI> = [
  { vehicleId: 'T123', vehicleType: 'Mercedes' },
  { vehicleId: 'T123', vehicleType: 'Mercedes', spaceDemand: { adults: 1 } },
  {
    durationTimeSpan: '01:30:45',
    eta: 1575014272286,
    vehicleLocation: { lat: 33.230993, lon: 6.374891 },
    vehicleId: 'Z 123 XX',
    vehicleDescription: 'proud-hand',
    taxiCenter: { name: 'More Taxi 123', phone: '+358401234567' },
  },
  { taxiCenter: { name: 'Some taxi', phone: '+358401234567' } },
  {
    taxiCenter: { name: 'Some taxi', phone: '+358401234567' },
    extra: { values: 1 },
    more: 'More values',
  },
] as unknown as NonEmptyArray<MODE_TAXI>;

export default MODE_TAXI;

// Success
