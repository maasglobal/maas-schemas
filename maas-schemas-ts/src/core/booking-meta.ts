/*

undefined
TSP/mode-specific additional information. The TSP adapter should set MODE_{mode} with defined data, otherwise 'meta' can be used freely.

!!! AUTO GENERATED BY CONVERT.TS REFRAIN FROM MANUAL EDITING !!!

*/

import * as t from 'io-ts';
import * as MODE_WALK_ from 'maas-schemas-ts/core/modes/MODE_WALK';
import * as MODE_BICYCLE_ from 'maas-schemas-ts/core/modes/MODE_BICYCLE';
import * as MODE_CAR_ from 'maas-schemas-ts/core/modes/MODE_CAR';
import * as MODE_TRAM_ from 'maas-schemas-ts/core/modes/MODE_TRAM';
import * as MODE_SUBWAY_ from 'maas-schemas-ts/core/modes/MODE_SUBWAY';
import * as MODE_RAIL_ from 'maas-schemas-ts/core/modes/MODE_RAIL';
import * as MODE_BUS_ from 'maas-schemas-ts/core/modes/MODE_BUS';
import * as MODE_FERRY_ from 'maas-schemas-ts/core/modes/MODE_FERRY';
import * as MODE_CABLE_CAR_ from 'maas-schemas-ts/core/modes/MODE_CABLE_CAR';
import * as MODE_GONDOLA_ from 'maas-schemas-ts/core/modes/MODE_GONDOLA';
import * as MODE_FUNICULAR_ from 'maas-schemas-ts/core/modes/MODE_FUNICULAR';
import * as MODE_SHARED_BICYCLE_ from 'maas-schemas-ts/core/modes/MODE_SHARED_BICYCLE';
import * as MODE_SHARED_CAR_ from 'maas-schemas-ts/core/modes/MODE_SHARED_CAR';
import * as MODE_TRANSIT_ from 'maas-schemas-ts/core/modes/MODE_TRANSIT';
import * as MODE_TRAIN_ from 'maas-schemas-ts/core/modes/MODE_TRAIN';
import * as MODE_TRAINISH_ from 'maas-schemas-ts/core/modes/MODE_TRAINISH';
import * as MODE_BUSISH_ from 'maas-schemas-ts/core/modes/MODE_BUSISH';
import * as MODE_TAXI_ from 'maas-schemas-ts/core/modes/MODE_TAXI';
import * as MODE_SCOOTER_ from 'maas-schemas-ts/core/modes/MODE_SCOOTER';

export const schemaId = 'http://maasglobal.com/core/booking-meta.json';

// Default
// The default export. More information at the top.
export type Default = t.Branded<
  {
    MODE_WALK?: MODE_WALK_.Default;
    MODE_BICYCLE?: MODE_BICYCLE_.Default;
    MODE_CAR?: MODE_CAR_.Default;
    MODE_TRAM?: MODE_TRAM_.Default;
    MODE_SUBWAY?: MODE_SUBWAY_.Default;
    MODE_RAIL?: MODE_RAIL_.Default;
    MODE_BUS?: MODE_BUS_.Default;
    MODE_FERRY?: MODE_FERRY_.Default;
    MODE_CABLE_CAR?: MODE_CABLE_CAR_.Default;
    MODE_GONDOLA?: MODE_GONDOLA_.Default;
    MODE_FUNICULAR?: MODE_FUNICULAR_.Default;
    MODE_SHARED_BICYCLE?: MODE_SHARED_BICYCLE_.Default;
    MODE_SHARED_CAR?: MODE_SHARED_CAR_.Default;
    MODE_TRANSIT?: MODE_TRANSIT_.Default;
    MODE_TRAIN?: MODE_TRAIN_.Default;
    MODE_TRAINISH?: MODE_TRAINISH_.Default;
    MODE_BUSISH?: MODE_BUSISH_.Default;
    MODE_TAXI?: MODE_TAXI_.Default;
    MODE_SCOOTER?: MODE_SCOOTER_.Default;
  },
  DefaultBrand
>;
export const Default = t.brand(
  t.partial({
    MODE_WALK: MODE_WALK_.Default,
    MODE_BICYCLE: MODE_BICYCLE_.Default,
    MODE_CAR: MODE_CAR_.Default,
    MODE_TRAM: MODE_TRAM_.Default,
    MODE_SUBWAY: MODE_SUBWAY_.Default,
    MODE_RAIL: MODE_RAIL_.Default,
    MODE_BUS: MODE_BUS_.Default,
    MODE_FERRY: MODE_FERRY_.Default,
    MODE_CABLE_CAR: MODE_CABLE_CAR_.Default,
    MODE_GONDOLA: MODE_GONDOLA_.Default,
    MODE_FUNICULAR: MODE_FUNICULAR_.Default,
    MODE_SHARED_BICYCLE: MODE_SHARED_BICYCLE_.Default,
    MODE_SHARED_CAR: MODE_SHARED_CAR_.Default,
    MODE_TRANSIT: MODE_TRANSIT_.Default,
    MODE_TRAIN: MODE_TRAIN_.Default,
    MODE_TRAINISH: MODE_TRAINISH_.Default,
    MODE_BUSISH: MODE_BUSISH_.Default,
    MODE_TAXI: MODE_TAXI_.Default,
    MODE_SCOOTER: MODE_SCOOTER_.Default,
  }),
  (
    x,
  ): x is t.Branded<
    {
      MODE_WALK?: MODE_WALK_.Default;
      MODE_BICYCLE?: MODE_BICYCLE_.Default;
      MODE_CAR?: MODE_CAR_.Default;
      MODE_TRAM?: MODE_TRAM_.Default;
      MODE_SUBWAY?: MODE_SUBWAY_.Default;
      MODE_RAIL?: MODE_RAIL_.Default;
      MODE_BUS?: MODE_BUS_.Default;
      MODE_FERRY?: MODE_FERRY_.Default;
      MODE_CABLE_CAR?: MODE_CABLE_CAR_.Default;
      MODE_GONDOLA?: MODE_GONDOLA_.Default;
      MODE_FUNICULAR?: MODE_FUNICULAR_.Default;
      MODE_SHARED_BICYCLE?: MODE_SHARED_BICYCLE_.Default;
      MODE_SHARED_CAR?: MODE_SHARED_CAR_.Default;
      MODE_TRANSIT?: MODE_TRANSIT_.Default;
      MODE_TRAIN?: MODE_TRAIN_.Default;
      MODE_TRAINISH?: MODE_TRAINISH_.Default;
      MODE_BUSISH?: MODE_BUSISH_.Default;
      MODE_TAXI?: MODE_TAXI_.Default;
      MODE_SCOOTER?: MODE_SCOOTER_.Default;
    },
    DefaultBrand
  > => true,
  'Default',
);
export interface DefaultBrand {
  readonly Default: unique symbol;
}

export default Default;

// Success
