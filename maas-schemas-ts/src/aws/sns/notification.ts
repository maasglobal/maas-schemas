/*

undefined
AWS SNS Notification JSON Payload

!!! AUTO GENERATED BY IOTSFJS REFRAIN FROM MANUAL EDITING !!!
See https://www.npmjs.com/package/io-ts-from-json-schema

*/

import * as t from 'io-ts';
import * as Units_ from '../../core/components/units';

export const schemaId = 'http://maasglobal.com/aws/sns/notification.json';

// SnsNotification
// The default export. More information at the top.
export type SnsNotification = t.Branded<
  {
    Type?: string & 'Notification';
    MessageId?: Units_.Uuid;
    TopicArn?: Units_.Arn;
    Subject?: string;
    Message?: string;
    Timestamp?: Units_.IsoDateTime;
    SignatureVersion?: number;
    Signature?: string;
    SigningCertURL?: Units_.Url;
    UnsubscribeURL?: Units_.Url;
  },
  SnsNotificationBrand
>;
export type SnsNotificationC = t.BrandC<
  t.PartialC<{
    Type: t.IntersectionC<[t.StringC, t.LiteralC<'Notification'>]>;
    MessageId: typeof Units_.Uuid;
    TopicArn: typeof Units_.Arn;
    Subject: t.StringC;
    Message: t.StringC;
    Timestamp: typeof Units_.IsoDateTime;
    SignatureVersion: t.NumberC;
    Signature: t.StringC;
    SigningCertURL: typeof Units_.Url;
    UnsubscribeURL: typeof Units_.Url;
  }>,
  SnsNotificationBrand
>;
export const SnsNotification: SnsNotificationC = t.brand(
  t.partial({
    Type: t.intersection([t.string, t.literal('Notification')]),
    MessageId: Units_.Uuid,
    TopicArn: Units_.Arn,
    Subject: t.string,
    Message: t.string,
    Timestamp: Units_.IsoDateTime,
    SignatureVersion: t.number,
    Signature: t.string,
    SigningCertURL: Units_.Url,
    UnsubscribeURL: Units_.Url,
  }),
  (
    x,
  ): x is t.Branded<
    {
      Type?: string & 'Notification';
      MessageId?: Units_.Uuid;
      TopicArn?: Units_.Arn;
      Subject?: string;
      Message?: string;
      Timestamp?: Units_.IsoDateTime;
      SignatureVersion?: number;
      Signature?: string;
      SigningCertURL?: Units_.Url;
      UnsubscribeURL?: Units_.Url;
    },
    SnsNotificationBrand
  > => true,
  'SnsNotification',
);
export interface SnsNotificationBrand {
  readonly SnsNotification: unique symbol;
}

export default SnsNotification;

// Success
